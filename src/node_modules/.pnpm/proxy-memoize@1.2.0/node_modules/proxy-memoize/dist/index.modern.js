import{getUntracked as e,isChanged as t,createProxy as r,trackMemo as o}from"proxy-compare";export{getUntracked as getUntrackedObject,replaceNewProxy}from"proxy-compare";const n=e=>"object"==typeof e&&null!==e,a=(t,r)=>{if(!n(t))return t;const c=e(t);return null!==c?(o(t),c):(r.has(t)||(r.add(t),Object.entries(t).forEach(([e,o])=>{const n=a(o,r);Object.is(n,o)||(t[e]=n)})),t)},c=(t,r,o)=>{if(!n(t)||!n(r))return;const a=o.get(e(r)||r);a&&a.forEach(e=>{c(t[e],r[e],o)})},s=(o,n)=>{var s;let p=0;const f=null!=(s=null==n?void 0:n.size)?s:1,l=[],u=new WeakMap,i=new WeakMap;return n=>{const s=e(n)||n,k=u.get(s);if(k)return c(n,k.o,k.a),k.r;for(let e=0;e<f;e+=1){const r=l[(p+e)%f];if(!r)break;if(!t(r.o,n,r.a,new WeakMap))return u.set(s,r),c(n,r.o,r.a),r.r}const d=new WeakMap,w=r(n,d,i),b=a(o(w),new Set);c(n,n,d);const m={o:n,r:b,a:d};return p=(p-1+f)%f,l[p]=m,u.set(s,m),b}};export{s as default};
//# sourceMappingURL=index.modern.mjs.map
