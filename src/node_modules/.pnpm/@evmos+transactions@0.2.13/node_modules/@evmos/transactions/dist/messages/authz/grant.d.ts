import { Chain, Fee, Sender } from '../common';
export interface MsgStakeAuthorizationParams {
    bot_address: string;
    validator_address: string;
    denom: string;
    maxTokens: string | undefined;
    duration_in_seconds: number;
}
export declare function createTxMsgStakeAuthorization(chain: Chain, sender: Sender, fee: Fee, memo: string, params: MsgStakeAuthorizationParams): {
    signDirect: {
        body: import("@evmos/proto/dist/proto/cosmos/tx/v1beta1/tx").cosmos.tx.v1beta1.TxBody;
        authInfo: import("@evmos/proto/dist/proto/cosmos/tx/v1beta1/tx").cosmos.tx.v1beta1.AuthInfo;
        signBytes: string;
    };
    legacyAmino: {
        body: import("@evmos/proto/dist/proto/cosmos/tx/v1beta1/tx").cosmos.tx.v1beta1.TxBody;
        authInfo: import("@evmos/proto/dist/proto/cosmos/tx/v1beta1/tx").cosmos.tx.v1beta1.AuthInfo;
        signBytes: string;
    };
};
//# sourceMappingURL=grant.d.ts.map