"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.StaticWalletProvider = void 0;
const use_wallet_1 = require("@terra-money/use-wallet");
const react_1 = __importStar(require("react"));
function StaticWalletProvider({ children, defaultNetwork, status = use_wallet_1.WalletStatus.INITIALIZING, availableConnectTypes = [], availableInstallTypes = [], availableConnections = [], availableInstallations = [], wallets = [], supportFeatures = new Set(), connection = undefined, }) {
    const state = (0, react_1.useMemo)(() => {
        return {
            availableConnectTypes,
            availableInstallTypes,
            availableConnections,
            availableInstallations,
            status,
            network: defaultNetwork,
            wallets,
            supportFeatures,
            connection,
            install: () => {
                throw new Error('not implemented!');
            },
            connect: () => {
                throw new Error('not implemented!');
            },
            connectReadonly: () => {
                throw new Error('not implemented!');
            },
            disconnect: () => {
                throw new Error('not implemented!');
            },
            post: () => {
                throw new Error('not implemented!');
            },
            sign: () => {
                throw new Error('not implemented!');
            },
            signBytes: () => {
                throw new Error('not implemented!');
            },
            refetchStates: () => {
                throw new Error('not implemented!');
            },
            recheckStatus: () => {
                throw new Error('not implemented!');
            },
            isChromeExtensionCompatibleBrowser: () => {
                throw new Error('not implemented!');
            },
            hasCW20Tokens: () => {
                throw new Error('not implemented!');
            },
            addCW20Tokens: () => {
                throw new Error('not implemented!');
            },
            hasNetwork: () => {
                throw new Error('not implemented!');
            },
            addNetwork: () => {
                throw new Error('not implemented!');
            },
        };
    }, [
        availableConnectTypes,
        availableInstallTypes,
        availableConnections,
        availableInstallations,
        status,
        defaultNetwork,
        wallets,
        supportFeatures,
        connection,
    ]);
    return (react_1.default.createElement(use_wallet_1.WalletContext.Provider, { value: state }, children));
}
exports.StaticWalletProvider = StaticWalletProvider;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU3RhdGljV2FsbGV0UHJvdmlkZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvQHRlcnJhLW1vbmV5L3dhbGxldC1wcm92aWRlci9TdGF0aWNXYWxsZXRQcm92aWRlci50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUNBLHdEQVNpQztBQUNqQywrQ0FBa0Q7QUFlbEQsU0FBZ0Isb0JBQW9CLENBQUMsRUFDbkMsUUFBUSxFQUNSLGNBQWMsRUFDZCxNQUFNLEdBQUcseUJBQVksQ0FBQyxZQUFZLEVBQ2xDLHFCQUFxQixHQUFHLEVBQUUsRUFDMUIscUJBQXFCLEdBQUcsRUFBRSxFQUMxQixvQkFBb0IsR0FBRyxFQUFFLEVBQ3pCLHNCQUFzQixHQUFHLEVBQUUsRUFDM0IsT0FBTyxHQUFHLEVBQUUsRUFDWixlQUFlLEdBQUcsSUFBSSxHQUFHLEVBQUUsRUFDM0IsVUFBVSxHQUFHLFNBQVMsR0FDSTtJQUMxQixNQUFNLEtBQUssR0FBRyxJQUFBLGVBQU8sRUFBUyxHQUFHLEVBQUU7UUFDakMsT0FBTztZQUNMLHFCQUFxQjtZQUNyQixxQkFBcUI7WUFDckIsb0JBQW9CO1lBQ3BCLHNCQUFzQjtZQUN0QixNQUFNO1lBQ04sT0FBTyxFQUFFLGNBQWM7WUFDdkIsT0FBTztZQUNQLGVBQWU7WUFDZixVQUFVO1lBQ1YsT0FBTyxFQUFFLEdBQUcsRUFBRTtnQkFDWixNQUFNLElBQUksS0FBSyxDQUFDLGtCQUFrQixDQUFDLENBQUM7WUFDdEMsQ0FBQztZQUNELE9BQU8sRUFBRSxHQUFHLEVBQUU7Z0JBQ1osTUFBTSxJQUFJLEtBQUssQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO1lBQ3RDLENBQUM7WUFDRCxlQUFlLEVBQUUsR0FBRyxFQUFFO2dCQUNwQixNQUFNLElBQUksS0FBSyxDQUFDLGtCQUFrQixDQUFDLENBQUM7WUFDdEMsQ0FBQztZQUNELFVBQVUsRUFBRSxHQUFHLEVBQUU7Z0JBQ2YsTUFBTSxJQUFJLEtBQUssQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO1lBQ3RDLENBQUM7WUFDRCxJQUFJLEVBQUUsR0FBRyxFQUFFO2dCQUNULE1BQU0sSUFBSSxLQUFLLENBQUMsa0JBQWtCLENBQUMsQ0FBQztZQUN0QyxDQUFDO1lBQ0QsSUFBSSxFQUFFLEdBQUcsRUFBRTtnQkFDVCxNQUFNLElBQUksS0FBSyxDQUFDLGtCQUFrQixDQUFDLENBQUM7WUFDdEMsQ0FBQztZQUNELFNBQVMsRUFBRSxHQUFHLEVBQUU7Z0JBQ2QsTUFBTSxJQUFJLEtBQUssQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO1lBQ3RDLENBQUM7WUFDRCxhQUFhLEVBQUUsR0FBRyxFQUFFO2dCQUNsQixNQUFNLElBQUksS0FBSyxDQUFDLGtCQUFrQixDQUFDLENBQUM7WUFDdEMsQ0FBQztZQUNELGFBQWEsRUFBRSxHQUFHLEVBQUU7Z0JBQ2xCLE1BQU0sSUFBSSxLQUFLLENBQUMsa0JBQWtCLENBQUMsQ0FBQztZQUN0QyxDQUFDO1lBQ0Qsa0NBQWtDLEVBQUUsR0FBRyxFQUFFO2dCQUN2QyxNQUFNLElBQUksS0FBSyxDQUFDLGtCQUFrQixDQUFDLENBQUM7WUFDdEMsQ0FBQztZQUNELGFBQWEsRUFBRSxHQUFHLEVBQUU7Z0JBQ2xCLE1BQU0sSUFBSSxLQUFLLENBQUMsa0JBQWtCLENBQUMsQ0FBQztZQUN0QyxDQUFDO1lBQ0QsYUFBYSxFQUFFLEdBQUcsRUFBRTtnQkFDbEIsTUFBTSxJQUFJLEtBQUssQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO1lBQ3RDLENBQUM7WUFDRCxVQUFVLEVBQUUsR0FBRyxFQUFFO2dCQUNmLE1BQU0sSUFBSSxLQUFLLENBQUMsa0JBQWtCLENBQUMsQ0FBQztZQUN0QyxDQUFDO1lBQ0QsVUFBVSxFQUFFLEdBQUcsRUFBRTtnQkFDZixNQUFNLElBQUksS0FBSyxDQUFDLGtCQUFrQixDQUFDLENBQUM7WUFDdEMsQ0FBQztTQUNGLENBQUM7SUFDSixDQUFDLEVBQUU7UUFDRCxxQkFBcUI7UUFDckIscUJBQXFCO1FBQ3JCLG9CQUFvQjtRQUNwQixzQkFBc0I7UUFDdEIsTUFBTTtRQUNOLGNBQWM7UUFDZCxPQUFPO1FBQ1AsZUFBZTtRQUNmLFVBQVU7S0FDWCxDQUFDLENBQUM7SUFFSCxPQUFPLENBQ0wsOEJBQUMsMEJBQWEsQ0FBQyxRQUFRLElBQUMsS0FBSyxFQUFFLEtBQUssSUFBRyxRQUFRLENBQTBCLENBQzFFLENBQUM7QUFDSixDQUFDO0FBakZELG9EQWlGQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFRlcnJhV2ViRXh0ZW5zaW9uRmVhdHVyZXMgfSBmcm9tICdAdGVycmEtbW9uZXkvd2ViLWV4dGVuc2lvbi1pbnRlcmZhY2UnO1xuaW1wb3J0IHtcbiAgQ29ubmVjdGlvbixcbiAgQ29ubmVjdFR5cGUsXG4gIEluc3RhbGxhdGlvbixcbiAgTmV0d29ya0luZm8sXG4gIFdhbGxldCxcbiAgV2FsbGV0Q29udGV4dCxcbiAgV2FsbGV0SW5mbyxcbiAgV2FsbGV0U3RhdHVzLFxufSBmcm9tICdAdGVycmEtbW9uZXkvdXNlLXdhbGxldCc7XG5pbXBvcnQgUmVhY3QsIHsgUmVhY3ROb2RlLCB1c2VNZW1vIH0gZnJvbSAncmVhY3QnO1xuXG5leHBvcnQgaW50ZXJmYWNlIFN0YXRpY1dhbGxldFByb3ZpZGVyUHJvcHMge1xuICBjaGlsZHJlbjogUmVhY3ROb2RlO1xuICBkZWZhdWx0TmV0d29yazogTmV0d29ya0luZm87XG4gIHN0YXR1cz86IFdhbGxldFN0YXR1cztcbiAgYXZhaWxhYmxlQ29ubmVjdFR5cGVzPzogQ29ubmVjdFR5cGVbXTtcbiAgYXZhaWxhYmxlSW5zdGFsbFR5cGVzPzogQ29ubmVjdFR5cGVbXTtcbiAgYXZhaWxhYmxlQ29ubmVjdGlvbnM/OiBDb25uZWN0aW9uW107XG4gIGF2YWlsYWJsZUluc3RhbGxhdGlvbnM/OiBJbnN0YWxsYXRpb25bXTtcbiAgd2FsbGV0cz86IFdhbGxldEluZm9bXTtcbiAgc3VwcG9ydEZlYXR1cmVzPzogU2V0PFRlcnJhV2ViRXh0ZW5zaW9uRmVhdHVyZXM+O1xuICBjb25uZWN0aW9uPzogQ29ubmVjdGlvbiB8IHVuZGVmaW5lZDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIFN0YXRpY1dhbGxldFByb3ZpZGVyKHtcbiAgY2hpbGRyZW4sXG4gIGRlZmF1bHROZXR3b3JrLFxuICBzdGF0dXMgPSBXYWxsZXRTdGF0dXMuSU5JVElBTElaSU5HLFxuICBhdmFpbGFibGVDb25uZWN0VHlwZXMgPSBbXSxcbiAgYXZhaWxhYmxlSW5zdGFsbFR5cGVzID0gW10sXG4gIGF2YWlsYWJsZUNvbm5lY3Rpb25zID0gW10sXG4gIGF2YWlsYWJsZUluc3RhbGxhdGlvbnMgPSBbXSxcbiAgd2FsbGV0cyA9IFtdLFxuICBzdXBwb3J0RmVhdHVyZXMgPSBuZXcgU2V0KCksXG4gIGNvbm5lY3Rpb24gPSB1bmRlZmluZWQsXG59OiBTdGF0aWNXYWxsZXRQcm92aWRlclByb3BzKSB7XG4gIGNvbnN0IHN0YXRlID0gdXNlTWVtbzxXYWxsZXQ+KCgpID0+IHtcbiAgICByZXR1cm4ge1xuICAgICAgYXZhaWxhYmxlQ29ubmVjdFR5cGVzLFxuICAgICAgYXZhaWxhYmxlSW5zdGFsbFR5cGVzLFxuICAgICAgYXZhaWxhYmxlQ29ubmVjdGlvbnMsXG4gICAgICBhdmFpbGFibGVJbnN0YWxsYXRpb25zLFxuICAgICAgc3RhdHVzLFxuICAgICAgbmV0d29yazogZGVmYXVsdE5ldHdvcmssXG4gICAgICB3YWxsZXRzLFxuICAgICAgc3VwcG9ydEZlYXR1cmVzLFxuICAgICAgY29ubmVjdGlvbixcbiAgICAgIGluc3RhbGw6ICgpID0+IHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdub3QgaW1wbGVtZW50ZWQhJyk7XG4gICAgICB9LFxuICAgICAgY29ubmVjdDogKCkgPT4ge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ25vdCBpbXBsZW1lbnRlZCEnKTtcbiAgICAgIH0sXG4gICAgICBjb25uZWN0UmVhZG9ubHk6ICgpID0+IHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdub3QgaW1wbGVtZW50ZWQhJyk7XG4gICAgICB9LFxuICAgICAgZGlzY29ubmVjdDogKCkgPT4ge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ25vdCBpbXBsZW1lbnRlZCEnKTtcbiAgICAgIH0sXG4gICAgICBwb3N0OiAoKSA9PiB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignbm90IGltcGxlbWVudGVkIScpO1xuICAgICAgfSxcbiAgICAgIHNpZ246ICgpID0+IHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdub3QgaW1wbGVtZW50ZWQhJyk7XG4gICAgICB9LFxuICAgICAgc2lnbkJ5dGVzOiAoKSA9PiB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignbm90IGltcGxlbWVudGVkIScpO1xuICAgICAgfSxcbiAgICAgIHJlZmV0Y2hTdGF0ZXM6ICgpID0+IHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdub3QgaW1wbGVtZW50ZWQhJyk7XG4gICAgICB9LFxuICAgICAgcmVjaGVja1N0YXR1czogKCkgPT4ge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ25vdCBpbXBsZW1lbnRlZCEnKTtcbiAgICAgIH0sXG4gICAgICBpc0Nocm9tZUV4dGVuc2lvbkNvbXBhdGlibGVCcm93c2VyOiAoKSA9PiB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignbm90IGltcGxlbWVudGVkIScpO1xuICAgICAgfSxcbiAgICAgIGhhc0NXMjBUb2tlbnM6ICgpID0+IHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdub3QgaW1wbGVtZW50ZWQhJyk7XG4gICAgICB9LFxuICAgICAgYWRkQ1cyMFRva2VuczogKCkgPT4ge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ25vdCBpbXBsZW1lbnRlZCEnKTtcbiAgICAgIH0sXG4gICAgICBoYXNOZXR3b3JrOiAoKSA9PiB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignbm90IGltcGxlbWVudGVkIScpO1xuICAgICAgfSxcbiAgICAgIGFkZE5ldHdvcms6ICgpID0+IHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdub3QgaW1wbGVtZW50ZWQhJyk7XG4gICAgICB9LFxuICAgIH07XG4gIH0sIFtcbiAgICBhdmFpbGFibGVDb25uZWN0VHlwZXMsXG4gICAgYXZhaWxhYmxlSW5zdGFsbFR5cGVzLFxuICAgIGF2YWlsYWJsZUNvbm5lY3Rpb25zLFxuICAgIGF2YWlsYWJsZUluc3RhbGxhdGlvbnMsXG4gICAgc3RhdHVzLFxuICAgIGRlZmF1bHROZXR3b3JrLFxuICAgIHdhbGxldHMsXG4gICAgc3VwcG9ydEZlYXR1cmVzLFxuICAgIGNvbm5lY3Rpb24sXG4gIF0pO1xuXG4gIHJldHVybiAoXG4gICAgPFdhbGxldENvbnRleHQuUHJvdmlkZXIgdmFsdWU9e3N0YXRlfT57Y2hpbGRyZW59PC9XYWxsZXRDb250ZXh0LlByb3ZpZGVyPlxuICApO1xufVxuIl19