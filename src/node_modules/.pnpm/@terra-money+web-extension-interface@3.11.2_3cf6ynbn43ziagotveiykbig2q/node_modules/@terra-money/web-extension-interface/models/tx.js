import { Fee, Msg, } from '@terra-money/terra.js';
export var WebExtensionTxStatus;
(function (WebExtensionTxStatus) {
    WebExtensionTxStatus["PROGRESS"] = "PROGRESS";
    WebExtensionTxStatus["SUCCEED"] = "SUCCEED";
    WebExtensionTxStatus["FAIL"] = "FAIL";
    WebExtensionTxStatus["DENIED"] = "DENIED";
})(WebExtensionTxStatus || (WebExtensionTxStatus = {}));
export function serializeTx(tx) {
    var _a, _b, _c;
    return {
        msgs: tx.msgs.map((msg) => msg.toJSON(tx.isClassic)),
        fee: (_a = tx.fee) === null || _a === void 0 ? void 0 : _a.toJSON(tx.isClassic),
        memo: tx.memo,
        gasPrices: (_b = tx.gasPrices) === null || _b === void 0 ? void 0 : _b.toString(),
        gasAdjustment: (_c = tx.gasAdjustment) === null || _c === void 0 ? void 0 : _c.toString(),
        feeDenoms: tx.feeDenoms,
    };
}
export function deserializeTx(tx) {
    const msgs = tx.msgs.map((msg) => JSON.parse(msg));
    const isProto = '@type' in msgs[0];
    return {
        ...tx,
        msgs: msgs.map((msg) => (isProto ? Msg.fromData(msg, tx.isClassic) : Msg.fromAmino(msg, tx.isClassic))),
        fee: tx.fee
            ? isProto
                ? Fee.fromData(JSON.parse(tx.fee))
                : Fee.fromAmino(JSON.parse(tx.fee))
            : undefined,
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvQHRlcnJhLW1vbmV5L3dlYi1leHRlbnNpb24taW50ZXJmYWNlL21vZGVscy90eC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBRUwsR0FBRyxFQUNILEdBQUcsR0FHSixNQUFNLHVCQUF1QixDQUFDO0FBTy9CLE1BQU0sQ0FBTixJQUFZLG9CQUtYO0FBTEQsV0FBWSxvQkFBb0I7SUFDOUIsNkNBQXFCLENBQUE7SUFDckIsMkNBQW1CLENBQUE7SUFDbkIscUNBQWEsQ0FBQTtJQUNiLHlDQUFpQixDQUFBO0FBQ25CLENBQUMsRUFMVyxvQkFBb0IsS0FBcEIsb0JBQW9CLFFBSy9CO0FBeUVELE1BQU0sVUFBVSxXQUFXLENBQUMsRUFBb0I7O0lBQzlDLE9BQU87UUFDTCxJQUFJLEVBQUUsRUFBRSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLEVBQUUsRUFBRSxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBQ3BELEdBQUcsRUFBRSxNQUFBLEVBQUUsQ0FBQyxHQUFHLDBDQUFFLE1BQU0sQ0FBQyxFQUFFLENBQUMsU0FBUyxDQUFDO1FBQ2pDLElBQUksRUFBRSxFQUFFLENBQUMsSUFBSTtRQUNiLFNBQVMsRUFBRSxNQUFBLEVBQUUsQ0FBQyxTQUFTLDBDQUFFLFFBQVEsRUFBRTtRQUNuQyxhQUFhLEVBQUUsTUFBQSxFQUFFLENBQUMsYUFBYSwwQ0FBRSxRQUFRLEVBQUU7UUFDM0MsU0FBUyxFQUFFLEVBQUUsQ0FBQyxTQUFTO0tBQ3hCLENBQUM7QUFDSixDQUFDO0FBRUQsTUFBTSxVQUFVLGFBQWEsQ0FBQyxFQUE2QjtJQUN6RCxNQUFNLElBQUksR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsRUFBRSxFQUFFLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBQ25ELE1BQU0sT0FBTyxHQUFHLE9BQU8sSUFBSSxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFFbkMsT0FBTztRQUNMLEdBQUcsRUFBRTtRQUNMLElBQUksRUFBRSxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxFQUFFLEVBQUUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxHQUFHLEVBQUUsRUFBRSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsU0FBUyxDQUFDLEdBQUcsRUFBRSxFQUFFLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQztRQUN2RyxHQUFHLEVBQUUsRUFBRSxDQUFDLEdBQUc7WUFDVCxDQUFDLENBQUMsT0FBTztnQkFDUCxDQUFDLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxHQUFHLENBQUMsQ0FBQztnQkFDbEMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxFQUFFLENBQUMsR0FBRyxDQUFDLENBQUM7WUFDckMsQ0FBQyxDQUFDLFNBQVM7S0FDZCxDQUFDO0FBQ0osQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIEV4dGVuc2lvbk9wdGlvbnMsXG4gIEZlZSxcbiAgTXNnLFxuICBQdWJsaWNLZXksXG4gIFR4LFxufSBmcm9tICdAdGVycmEtbW9uZXkvdGVycmEuanMnO1xuaW1wb3J0IHtcbiAgV2ViRXh0ZW5zaW9uQ3JlYXRlVHhGYWlsZWQsXG4gIFdlYkV4dGVuc2lvblR4RmFpbGVkLFxuICBXZWJFeHRlbnNpb25UeFVuc3BlY2lmaWVkRXJyb3IsXG59IGZyb20gJy4uL2Vycm9ycyc7XG5cbmV4cG9ydCBlbnVtIFdlYkV4dGVuc2lvblR4U3RhdHVzIHtcbiAgUFJPR1JFU1MgPSAnUFJPR1JFU1MnLFxuICBTVUNDRUVEID0gJ1NVQ0NFRUQnLFxuICBGQUlMID0gJ0ZBSUwnLFxuICBERU5JRUQgPSAnREVOSUVEJyxcbn1cblxuZXhwb3J0IGludGVyZmFjZSBXZWJFeHRlbnNpb25UeFByb2dyZXNzIHtcbiAgc3RhdHVzOiBXZWJFeHRlbnNpb25UeFN0YXR1cy5QUk9HUkVTUztcbiAgcGF5bG9hZD86IHVua25vd247XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgV2ViRXh0ZW5zaW9uUG9zdFBheWxvYWQge1xuICBoZWlnaHQ6IG51bWJlcjtcbiAgcmF3X2xvZzogc3RyaW5nO1xuICB0eGhhc2g6IHN0cmluZztcbn1cblxuZXhwb3J0IHR5cGUgV2ViRXh0ZW5zaW9uU2lnblBheWxvYWQgPSBUeC5EYXRhO1xuXG5leHBvcnQgaW50ZXJmYWNlIFdlYkV4dGVuc2lvblNpZ25CeXRlc1BheWxvYWQge1xuICByZWNpZDogbnVtYmVyO1xuXG4gIC8qKlxuICAgKiBiYXNlNjQgVWludDhBcnJheVxuICAgKlxuICAgKiBAZXhhbXBsZVxuICAgKiBgYGBcbiAgICogLy8gc3RyaW5naWZpZWQgYnlcbiAgICogQnVmZmVyLmZyb20oVWludDhBcnJheSkudG9TdHJpbmcoJ2Jhc2U2NCcpXG4gICAqXG4gICAqIC8vIHRvIFVpbnQ4QXJyYXlcbiAgICogVWludDhBcnJheS5mcm9tKEJ1ZmZlci5mcm9tKGJhc2U2NFN0cmluZywgJ2Jhc2U2NCcpKVxuICAgKiBgYGBcbiAgICovXG4gIHNpZ25hdHVyZTogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBAZXhhbXBsZVxuICAgKiBgYGBcbiAgICogUHVibGljS2V5LmZyb21EYXRhKHB1YmxpY19rZXkpXG4gICAqIGBgYFxuICAgKi9cbiAgcHVibGljX2tleT86IFB1YmxpY0tleS5EYXRhO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFdlYkV4dGVuc2lvblR4U3VjY2VlZDxQYXlsb2FkPiB7XG4gIHN0YXR1czogV2ViRXh0ZW5zaW9uVHhTdGF0dXMuU1VDQ0VFRDtcbiAgcGF5bG9hZDogUGF5bG9hZDtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBXZWJFeHRlbnNpb25UeEZhaWwge1xuICBzdGF0dXM6IFdlYkV4dGVuc2lvblR4U3RhdHVzLkZBSUw7XG4gIGVycm9yOlxuICAgIHwgV2ViRXh0ZW5zaW9uQ3JlYXRlVHhGYWlsZWRcbiAgICB8IFdlYkV4dGVuc2lvblR4RmFpbGVkXG4gICAgfCBXZWJFeHRlbnNpb25UeFVuc3BlY2lmaWVkRXJyb3I7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgV2ViRXh0ZW5zaW9uVHhEZW5pZWQge1xuICBzdGF0dXM6IFdlYkV4dGVuc2lvblR4U3RhdHVzLkRFTklFRDtcbn1cblxuZXhwb3J0IHR5cGUgV2ViRXh0ZW5zaW9uVHhSZXN1bHQ8UGF5bG9hZD4gPVxuICB8IFdlYkV4dGVuc2lvblR4UHJvZ3Jlc3NcbiAgfCBXZWJFeHRlbnNpb25UeFN1Y2NlZWQ8UGF5bG9hZD5cbiAgfCBXZWJFeHRlbnNpb25UeEZhaWxcbiAgfCBXZWJFeHRlbnNpb25UeERlbmllZDtcblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyBmdW5jdGlvbnNcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuZXhwb3J0IGludGVyZmFjZSBTZXJpYWxpemVkQ3JlYXRlVHhPcHRpb25zXG4gIGV4dGVuZHMgT21pdDxFeHRlbnNpb25PcHRpb25zLCAnbXNncycgfCAnZmVlJz4ge1xuICBtc2dzOiBzdHJpbmdbXTtcbiAgZmVlOiBzdHJpbmcgfCB1bmRlZmluZWQ7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzZXJpYWxpemVUeCh0eDogRXh0ZW5zaW9uT3B0aW9ucyk6IFNlcmlhbGl6ZWRDcmVhdGVUeE9wdGlvbnMge1xuICByZXR1cm4ge1xuICAgIG1zZ3M6IHR4Lm1zZ3MubWFwKChtc2cpID0+IG1zZy50b0pTT04odHguaXNDbGFzc2ljKSksXG4gICAgZmVlOiB0eC5mZWU/LnRvSlNPTih0eC5pc0NsYXNzaWMpLFxuICAgIG1lbW86IHR4Lm1lbW8sXG4gICAgZ2FzUHJpY2VzOiB0eC5nYXNQcmljZXM/LnRvU3RyaW5nKCksXG4gICAgZ2FzQWRqdXN0bWVudDogdHguZ2FzQWRqdXN0bWVudD8udG9TdHJpbmcoKSxcbiAgICBmZWVEZW5vbXM6IHR4LmZlZURlbm9tcyxcbiAgfTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGRlc2VyaWFsaXplVHgodHg6IFNlcmlhbGl6ZWRDcmVhdGVUeE9wdGlvbnMpOiBFeHRlbnNpb25PcHRpb25zIHtcbiAgY29uc3QgbXNncyA9IHR4Lm1zZ3MubWFwKChtc2cpID0+IEpTT04ucGFyc2UobXNnKSk7XG4gIGNvbnN0IGlzUHJvdG8gPSAnQHR5cGUnIGluIG1zZ3NbMF07XG5cbiAgcmV0dXJuIHtcbiAgICAuLi50eCxcbiAgICBtc2dzOiBtc2dzLm1hcCgobXNnKSA9PiAoaXNQcm90byA/IE1zZy5mcm9tRGF0YShtc2csIHR4LmlzQ2xhc3NpYykgOiBNc2cuZnJvbUFtaW5vKG1zZywgdHguaXNDbGFzc2ljKSkpLFxuICAgIGZlZTogdHguZmVlXG4gICAgICA/IGlzUHJvdG9cbiAgICAgICAgPyBGZWUuZnJvbURhdGEoSlNPTi5wYXJzZSh0eC5mZWUpKVxuICAgICAgICA6IEZlZS5mcm9tQW1pbm8oSlNPTi5wYXJzZSh0eC5mZWUpKVxuICAgICAgOiB1bmRlZmluZWQsXG4gIH07XG59XG4iXX0=