"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var __1 = require("..");
it('should sort normal things alphabetically', function () {
    expect(['a', 'h', 'b', 'i', 'c', 'd', 'j', 'e', 'k', 'f', 'g'].sort(function (a, b) {
        return __1.naturalSort(a, b, { importOrderCaseInsensitive: false });
    })).toEqual(['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k']);
});
it('should treat capital letters as alphabetically earlier than lowercase if case sensitive (or unspecified)', function () {
    expect(['./ExampleView', './ExamplesList'].sort(function (a, b) {
        return __1.naturalSort(a, b, { importOrderCaseInsensitive: false });
    })).toMatchInlineSnapshot(['./ExampleView', './ExamplesList'], "\n        Array [\n          \"./ExampleView\",\n          \"./ExamplesList\",\n        ]\n    ");
    expect(['./ExampleView', './ExamplesList'].sort(function (a, b) {
        return __1.naturalSort(a, b, {});
    })).toMatchInlineSnapshot(['./ExampleView', './ExamplesList'], "\n        Array [\n          \"./ExampleView\",\n          \"./ExamplesList\",\n        ]\n    ");
});
it('should ignore capitalization differences if case-insensitive', function () {
    expect(['./ExampleView', './ExamplesList'].sort(function (a, b) {
        return __1.naturalSort(a, b, { importOrderCaseInsensitive: true });
    })).toEqual(['./ExamplesList', './ExampleView']);
});
it('should sort things numerically', function () {
    expect(['a2', 'a3', 'a10', 'a1', 'a11', 'a9'].sort(function (a, b) {
        return __1.naturalSort(a, b, { importOrderCaseInsensitive: true });
    })).toEqual(['a1', 'a2', 'a3', 'a9', 'a10', 'a11']);
});
it('should sort deterministically if case-insensitive', function () {
    expect(['./something', './Something'].sort(function (a, b) {
        return __1.naturalSort(a, b, { importOrderCaseInsensitive: true });
    })).toEqual(['./something', './Something']);
    expect(['./Something', './something'].sort(function (a, b) {
        return __1.naturalSort(a, b, { importOrderCaseInsensitive: true });
    })).toEqual(['./something', './Something']);
});
