'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var withSharedProps = require('./withSharedProps-f2576f22.js');
var React = require('react');
var styleInject_es = require('./style-inject.es-03cdf6cd.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);

var css_248z = "@keyframes spinners-react-infinity{0%{stroke-dasharray:1,347;stroke-dashoffset:75}25%,75%{stroke-dasharray:17,330}50%{stroke-dasharray:1,347}to{stroke-dasharray:1,347;stroke-dashoffset:423}}";
styleInject_es.styleInject(css_248z);

var Component = function (_a) {
    var secondaryColor = _a.secondaryColor, speed = _a.speed, still = _a.still, thickness = _a.thickness, svgProps = withSharedProps.__rest(_a, ["secondaryColor", "speed", "still", "thickness"]);
    var strokeWidth = 7 * (thickness / 100);
    var dashStyle = !still
        ? { animation: "spinners-react-infinity " + 140 / speed + "s linear infinite" }
        : {};
    return (React__default["default"].createElement("svg", withSharedProps.__assign({ fill: "none", viewBox: "0 0 131 55" }, svgProps),
        React__default["default"].createElement("defs", null,
            React__default["default"].createElement("path", { d: "M46.57 45.5138C36.346 55.4954 19.8919 55.4954 9.66794 45.5138C-0.55598 35.5321 -0.55598 19.4678 9.66794 9.48624C19.8919 -0.495412 36.346 -0.495412 46.57 9.48624L84.4303 45.5138C94.6543 55.4954 111.108 55.4954 121.332 45.5138C131.556 35.5321 131.556 19.4678 121.332 9.48624C111.108 -0.495412 94.6543 -0.495412 84.4303 9.48624L46.57 45.5138Z", id: "spinners-react-infinity-path" })),
        React__default["default"].createElement("use", { stroke: secondaryColor, strokeWidth: strokeWidth, xlinkHref: "#spinners-react-infinity-path" }),
        React__default["default"].createElement("use", { fill: "none", stroke: "currentColor", strokeDasharray: "1, 347", strokeDashoffset: "75", strokeLinecap: "round", strokeWidth: strokeWidth, style: dashStyle, xlinkHref: "#spinners-react-infinity-path" })));
};
Component.defaultProps = styleInject_es.secondaryColorDefaultProps;
var SpinnerInfinity = withSharedProps.withSharedProps(Component);

exports.SpinnerInfinity = SpinnerInfinity;
//# sourceMappingURL=SpinnerInfinity.js.map
